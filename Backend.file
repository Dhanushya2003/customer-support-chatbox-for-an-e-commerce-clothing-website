// chatbox.js
const express = require('express');
const bodyParser = require('body-parser');
const app = express();
const PORT = 3000;

// Middleware
app.use(bodyParser.json());

// In-memory chat log
let chatLog = [];

// Serve frontend HTML + JS + CSS
app.get('/', (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
      <title>Customer Support Chat</title>
      <style>
        body { font-family: Arial; margin: 0; padding: 0; }
        .chatbox-container {
          position: fixed; bottom: 20px; right: 20px;
          width: 320px; max-height: 500px; background: white;
          border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
          overflow: hidden; display: none; flex-direction: column;
        }
        .chatbox-header {
          background-color: #ff4081; color: white;
          padding: 15px; font-weight: bold; text-align: center;
        }
        .chatbox-messages {
          flex: 1; padding: 15px; overflow-y: auto; background-color: #f9f9f9;
        }
        .message { margin-bottom: 12px; }
        .message.user { text-align: right; }
        .message.agent { text-align: left; }
        .message span {
          background-color: #e0e0e0; display: inline-block;
          padding: 8px 12px; border-radius: 16px; max-width: 80%;
        }
        .chatbox-input {
          display: flex; border-top: 1px solid #ddd;
        }
        .chatbox-input input {
          flex: 1; padding: 10px; border: none; outline: none;
        }
        .chatbox-input button {
          background-color: #ff4081; color: white;
          border: none; padding: 10px 15px; cursor: pointer;
        }
        .chatbox-toggle {
          position: fixed; bottom: 20px; right: 20px;
          background-color: #ff4081; color: white;
          border: none; border-radius: 50%;
          width: 50px; height: 50px; font-size: 24px;
          cursor: pointer; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }
      </style>
    </head>
    <body>
      <button class="chatbox-toggle" onclick="toggleChatbox()">ðŸ’¬</button>
      <div class="chatbox-container" id="chatbox">
        <div class="chatbox-header">Need Help? ðŸ‘—</div>
        <div class="chatbox-messages" id="messages"></div>
        <div class="chatbox-input">
          <input type="text" id="userInput" placeholder="Type your message..." />
          <button onclick="sendMessage()">Send</button>
        </div>
      </div>

      <script>
        function toggleChatbox() {
          const chatbox = document.getElementById('chatbox');
          chatbox.style.display = chatbox.style.display === 'flex' ? 'none' : 'flex';
        }

        function sendMessage() {
          const input = document.getElementById('userInput');
          const message = input.value.trim();
          if (message === '') return;

          addMessage('user', message);
          input.value = '';

          fetch('/api/message', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ message })
          })
          .then(res => res.json())
          .then(data => {
            if (data.reply) addMessage('agent', data.reply);
          })
          .catch(err => {
            console.error(err);
            addMessage('agent', 'Oops! Something went wrong.');
          });
        }

        function addMessage(sender, text) {
          const messages = document.getElementById('messages');
          const msgDiv = document.createElement('div');
          msgDiv.className = 'message ' + sender;
          const span = document.createElement('span');
          span.textContent = text;
          msgDiv.appendChild(span);
          messages.appendChild(msgDiv);
          messages.scrollTop = messages.scrollHeight;
        }
      </script>
    </body>
    </html>
  `);
});

// API endpoint
app.post('/api/message', (req, res) => {
  const { message } = req.body;

  if (!message) {
    return res.status(400).json({ error: 'Message is required' });
  }

  chatLog.push({ from: 'user', text: message });

  const reply = "ðŸ‘— Thanks for reaching out! We'll assist you shortly.";
  chatLog.push({ from: 'agent', text: reply });

  res.json({ reply });
});

app.listen(PORT, () => {
  console.log(`âœ… Chatbox app running at http://localhost:${PORT}`);
});
